@model IEnumerable<Nihongo.Models.MS_UserVocabulariesModels>

@{
    ViewBag.Title = "Danh sách từ vựng";
    Layout = "~/Views/Shared/_MasterUserLayout.cshtml";
}
@{
    var firstVoca = (Model != null && Model.Count() > 0) ? Model.FirstOrDefault() : new Nihongo.Models.MS_UserVocabulariesModels();
}
<div id="content">
    <div class="panel box-shadow-none content-header">
        <div class="panel-body">
            <div class="col-md-6">
                <h3 class="animated fadeInLeft">@firstVoca.CategoryName</h3>
                @if (!CommonMethod.IsNullOrEmpty(firstVoca.VocaSetName))
                {
                    <p class="animated fadeInDown">
                        @Html.ActionLink(firstVoca.VocaSetName, "danh-sach-bai-hoc", "Account", new { @id = firstVoca.VocaSetID, @urlDisplay = firstVoca.VocaSetUrlDisplay }, new { })
                        <span class="fa-angle-right fa"></span>
                        <a>@firstVoca.CategoryName</a>

                    </p>
                }
            </div>
            <div class="col-md-6">
                <p style="margin-top: 20px;">
                    @if (firstVoca.CategoryLineNumber == firstVoca.VocaSetNumOfCategories)
                    {
                        <a href="@Url.Action("danh-muc-tu-vung", "Account", new { @id = (firstVoca.CategoryID + 1) })" class="btn btn-outline btn-primary pull-right disabled" data-toggle="tooltip" title="Bài tiếp theo">
                            <span class="icons icon-arrow-right"></span>
                        </a>    
                    }
                    else
                    {
                        <a href="@Url.Action("danh-muc-tu-vung", "Account", new { @id = (firstVoca.CategoryID + 1) })" class="btn btn-outline btn-primary pull-right" data-toggle="tooltip" title="Bài tiếp theo">
                            <span class="icons icon-arrow-right"></span>
                        </a>
                    }
                    @if (firstVoca.CategoryLineNumber == 1)
                    {
                        <a href="@Url.Action("danh-muc-tu-vung", "Account", new { @id = (firstVoca.CategoryID) })" class="btn btn-outline btn-primary pull-right disabled" data-toggle="tooltip" title="Bài trước">
                            <span class="icons icon-arrow-left"></span>
                        </a>
                    }
                    else
                    {
                        <a href="@Url.Action("danh-muc-tu-vung", "Account", new { @id = (firstVoca.CategoryID - 1) })" class="btn btn-outline btn-primary pull-right" data-toggle="tooltip" title="Bài trước">
                            <span class="icons icon-arrow-left"></span>
                        </a>
                    }
                </p>
            </div>
        </div>
    </div>
    <div class="partialcontent text-center panel box-shadow-none content-header" data-url="@Url.Action(CommonMethod.EncodeUrl("GetButtons"), "Account", new { @id = @firstVoca.VocaSetID })">
    </div>
    <div class="col-md-12">
        @if (Model != null && Model.Count() > 0)
        {
            int count = 0;
            int numOfColumn = 4;
            var models = Model.ToList();
            var max = models.Count;
            int numOfRows = models.Count % numOfColumn == 0 ? models.Count / numOfColumn : models.Count / numOfColumn + 1;

            for (int k = 0; k < numOfRows; k++)
            {
            <div class="row">
                @for (int i = 0; i < (max > numOfColumn ? numOfColumn : max); i++)
                {
                    Nihongo.Models.MS_UserVocabulariesModels voca = models[count];
                    <div class="col-sm-6 col-md-3 product-grid">
                        <div class="thumbnail">
                            @*<div class="product-price product-price-top">
                                <h4>@(count + 1)</h4>
                            </div>*@

                            <div class="caption">
                                @{var divHasLearnt = "h" + voca.ID;}
                                <small class="error" id="@divHasLearnt">@( voca.HasLearnt == CommonData.Status.Enable ? "Đã học" : "Chưa học")</small>
                                @{var divIgnore = "i" + voca.ID;}
                                <small class="pull-right error" id="@divIgnore">@( voca.IsIgnore == CommonData.Status.Enable ? "Đã bỏ qua" : "")</small>

                                <h2 class="text-center">
                                    <a href="#" class="drawKanji " data-toggle="tooltip" title="Nhấp để xem cách viết">@voca.Kanji</a>
                                </h2>
                                <p class="text-center">@voca.Pinyin</p>

                                <p class="text-center">
                                    <span class="fa fa-heart @(voca.Level > 0 ? "text-primary" : "")"></span>
                                    <span class="fa fa-heart @(voca.Level > 2 ? "text-primary" : "")"></span>
                                    <span class="fa fa-heart @(voca.Level > 4 ? "text-primary" : "")"></span>
                                    <span class="fa fa-heart @(voca.Level > 6 ? "text-primary" : "")"></span>
                                    <span class="fa fa-heart @(voca.Level > 8 ? "text-primary" : "")"></span>
                                </p>

                                <p class="text-center">
                                    @{var divNotebook = "n" + voca.ID;}
                                    <a href="#" id="@divNotebook" class="btn btn-primary btn-sm notebook" data-toggle="tooltip" title="Nhấp để thêm vào hay xóa từ khỏi sổ tay" role="button" data-value="@voca.ID">@( voca.HasMarked == CommonData.Status.Enable ? "Bỏ khỏi sổ" : "Lưu sổ")</a>
                                    <a href="#" class="btn btn-primary btn-sm ignore" data-toggle="tooltip" title="Nhấp để bỏ qua hay học lại từ này" role="button" data-value="@voca.ID">@( voca.IsIgnore == CommonData.Status.Enable ? "Học lại" : "Bỏ qua")</a>
                                </p>
                                <p class="text-center">
                                </p>
                            </div>
                        </div>
                    </div>
                                      count++;
                }
            </div>   
                max -= numOfColumn;
            }
        }
    </div>
</div>
}
<!-- end: content -->
<script src='@Scripts.Url("~/bundles/dr")' async> </script>
<script type="text/javascript" src='@Scripts.Url("~/bundles/audio")'> </script>
<script src="~/Scripts/jQuery.loadScroll.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        vocas = set(@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model)));

        $('.ignore').on('click', function (e) {
            e.preventDefault();

            var id = $(this).attr('data-value');
            var obj = this;
            var voca = getVoca(id);
            if (voca != null) {
                if (voca.IsIgnore == '0') {
                    voca.IsIgnore = "1";
                }
                else {
                    voca.IsIgnore = "0";
                }
                $.ajax({
                    cache: false,
                    type: "post",
                    async: false,
                    url: '/Account/' + '@CommonMethod.EncodeUrl("IgnoreVoca")',
                    data: JSON.stringify(voca),
                    dataType: "json",
                    contentType: 'application/json',
                    success: function (result) {
                        if (result.ReturnCode == '@CommonData.DbReturnCode.AccessDenied') {
                            if (voca.IsIgnore == '0') {
                                voca.IsIgnore = "1";
                            }
                            else {
                                voca.IsIgnore = "0";
                            }
                            window.location.href = '/Account/RequireLogin';
                        }
                        else if (result.ReturnCode != 0) {
                            if (voca.IsIgnore == '0') {
                                voca.IsIgnore = "1";
                            }
                            else {
                                voca.IsIgnore = "0";
                            }
                            alert('Có lỗi xảy ra');
                        }
                        else {
                            if (voca.IsIgnore == '0') {
                                $(obj).html('Bỏ qua');
                                $('#i' + id).html('');

                            }
                            else {
                                $(obj).html('Học lại');
                                $('#i' + id).html('Đã bỏ qua');
                            }
                            voca.HasLearnt = result.HasLearnt;
                            if (result.HasLearnt == '1') {
                                $('#h' + id).html('Đã học');
                            }
                            else {
                                $('#h' + id).html('Chưa học');
                            }

                            voca.HasMarked = '0';
                            $('#n' + id).html('Lưu sổ');
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.responseText);
                        return false;
                    }
                });
                }
        });

        $('.notebook').on('click', function (e) {
            e.preventDefault();

            var id = $(this).attr('data-value');
            var obj = this;
            var voca = getVoca(id);
            if (voca != null) {
                if (voca.IsIgnore == '1') {
                    alert('Từ này đã bị bỏ qua. Chọn học lại nếu bạn muốn thêm vào sổ!');
                    return;
                }

                if (voca.HasMarked == '0') {
                    voca.HasMarked = "1";
                }
                else {
                    voca.HasMarked = "0";
                }
                $.ajax({
                    cache: false,
                    type: "post",
                    async: false,
                    url: '/Account/' + '@CommonMethod.EncodeUrl("MarkVoca")',
                    data: JSON.stringify(voca),
                    dataType: "json",
                    contentType: 'application/json',
                    success: function (result) {
                        if (result.ReturnCode == '@CommonData.DbReturnCode.AccessDenied') {
                            if (voca.HasMarked == '0') {
                                voca.HasMarked = "1";
                            }
                            else {
                                voca.HasMarked = "0";
                            }
                            window.location.href = '/Account/RequireLogin';
                        }
                        else if (result.ReturnCode != 0) {
                            if (voca.HasMarked == '0') {
                                voca.HasMarked = "1";
                            }
                            else {
                                voca.HasMarked = "0";
                            }
                            alert('Có lỗi xảy ra');
                        }
                        else {
                            if (voca.HasMarked == '0') {
                                $(obj).html('Lưu sổ');
                            }
                            else {
                                $(obj).html('Bỏ khỏi sổ');
                            }
                        }

                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.responseText);
                        return false;
                    }
                });
                }
        });
    });
        function getVoca(id) {
            for (var i = 0; i < vocas.length; i++) {
                if (vocas[i].ID == id) {
                    return vocas[i];
                }
            }
            return null;
        }
        function set(value) {
            return value;
        }

</script>
<script type="text/javascript">
    $(document).ready(function () {
        $('.partialcontent').each(function (i, item) {
            var url = $(item).data('url');
            if (url && url.length > 0) {
                $(item).load(url);
            }
        });
    });
</script>
