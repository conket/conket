@model IEnumerable<Nihongo.Models.MS_UserVocabulariesModels>
<div class="row" id="vocalist">
    @if (Model != null && Model.Count() > 0)
    {

        int count = 0;
        int numOfColumn = 2;
        var models = Model.ToList();
        var max = models.Count;
        int numOfRows = models.Count % numOfColumn == 0 ? models.Count / numOfColumn : models.Count / numOfColumn + 1;

        for (int k = 0; k < numOfRows; k++)
        {
        <div class="row vocalist">
            @for (int i = 0; i < (max > numOfColumn ? numOfColumn : max); i++)
            {
                Nihongo.Models.MS_UserVocabulariesModels voca = models[count];
                <div class="col-md-6">
                    <div class="row brdr-top bgc-fff pad-10 box-shad btm-mrg-20 property-listing">
                        <div class="col-lg-4 col-md-6 col-sm-6 hidden-xs ">
                            <img class="img-rounded voca-image" data-src='@Href("~/" + @voca.UrlImage)' src="" alt="tu-vung-tieng-nhat" >@*</a>
                        @{ var img = "~/App_Sprites/" + voca.VocabularyCode + ".jpg";}
                        @Sprite.Image(img, new { alt="từ-vựng-tiếng-nhật", style="width: 100%; height: 100px;", @class="img-responsive" })*@
                        </div>
                        <div class="col-lg-8 col-md-6 col-sm-6 col-xs-12">
                            <div class="media">
                                <div class="media-body fnt-smaller">
                                    <h4 class="media-heading">
                                        <span class="label label-primary">@(count + 1)</span> 
                                            <a href="#" class="voca-audio" data-audio="@voca.UrlAudio" target="_parent">@voca.DisplayVoca
                                                <span class="glyphicon glyphicon-volume-up"></span>
                                            </a>
                                            <small class="pull-right">
                                                @if (CommonMethod.ParseString(Session["UserID"]) != "")
                                                {
                                                    { Html.RenderAction("CheckCompletedVoca", "Library", new { @id = @voca.ID }); }
                                                }
@*@if (voca.HasLearnt == Ivs.Core.Common.CommonData.Status.Enable)
                                                {
                                                    <span class="label label-info">Đã thuộc</span>
                                                }
                                                else
                                                {
                                                    <span class="label label-danger">Chưa thuộc</span>
                                                }*@
                                            </small>
                                    </h4>
                                    <ul class="mrg-0 btm-mrg-10 clr-535353">
                                        <li>
                                            <div class="zoom-content">@voca.Romaji</div>
                                        </li>
                                        <li>
                                            <div class="zoom-content">@(voca.DisplayType == "1" ? voca.Katakana : voca.Hiragana)</div>
                                        </li>
                                        <li>
                                            <div class="zoom-content"><a href="#" class="drawKanji" data-toggle="tooltip" title="Nhấp để xem cách viết">@voca.Kanji</a></div>
                                        </li>
                                    </ul>
                                    <p>
                                        @voca.Description
                                    </p>
                                    <div class="text-right">
                                        @if (CommonMethod.ParseString(Session["UserID"]) != "")
                                        {
                                            <a href='#' class="btn btn-default btn-sm require-login" onclick="updateHasMarked(@voca.ID); return false;"
                            role="button">Thêm vào sổ tay</a>
                                        }
                                    </div>
                                    @*<span class="fnt-smaller fnt-lighter fnt-arial">
                       
                                        </span>*@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                                        count++;
            }
        </div>   
            max -= numOfColumn;
        }

    }
</div>
<script src='@Scripts.Url("~/bundles/dr")' async> </script>
<script src='@Scripts.Url("~/bundles/jqueryui")'> </script>
<script src='@Scripts.Url("~/bundles/jquerycookie")' async> </script>
<script type="text/javascript" src='@Scripts.Url("~/bundles/audio")'> </script>
<script src="~/Scripts/jQuery.loadScroll.js"></script>
<script type="text/javascript">
    var vocas;
    
    $(document).ready(function () {
        $('img').loadScroll(500); // in ms

        vocas = set(@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model)));

        var vocaSounds = [];
        if (vocas != null && vocas.length > 0) {
            for (var i = 0; i < vocas.length; i++) {
                //var audio = new Audio(vocas[i].UrlAudio);
                //audio.load();
                //if (i == vocas.length - 1) {
                //    jAudio += vocas[i].VocabularyCode + ':{ id:' + vocas[i].VocabularyCode + '}';
                //}
                //else {
                //    jAudio += vocas[i].VocabularyCode + ':{ id:' + vocas[i].VocabularyCode + '},';
                //}
                if (vocas[i].UrlAudio) {
                    var item = {};
                    if (vocas[i].DisplayType == '1') {
                        item = {
                            name: vocas[i].UrlAudio,
                            path: "/Content/media/hiragana/"
                        };
                    }
                    else if (vocas[i].DisplayType == '2') {
                        item = {
                            name: vocas[i].UrlAudio,
                            path: "/Content/media/katakana/"
                        };
                    }
                    //item.name = voca.UrlAudio;
                    vocaSounds.push(item);
                }
            }

            ion.sound({
                sounds: (vocaSounds),
                // main config
                path: "/Content/media/hiragana/",
                preload: true,
                multiplay: true,
                volume: 1
            });
        }

        $('.voca-audio').on('click', function (e) {
            e.preventDefault();

            var urlAudio = $(this).attr('data-audio');
            //alert(urlAudio);
            if (urlAudio) {
                ion.sound.play(urlAudio);
            }
            return false;
        });
    })

    function getVoca(id) {
        for (var i = 0; i < vocas.length; i++) {
            if (vocas[i].ID == id) {
                return vocas[i];
            }
        }
        return null;
    }

    function updateHasMarked(id) {
        var voca = getVoca(id);
        if (voca != null) {
            if (voca.HasMarked == "1") {
                alert('Từ vựng này đã có trong Sổ tay');
                return;
            }
            voca.HasMarked = "1";
            $.ajax({
                cache: true,
                type: "post",
                async: true,
                url: '/Library/' + '@CommonMethod.EncodeUrl("UpdateHasMarked")',
                data: JSON.stringify(voca),
                dataType: "json",
                contentType: 'application/json',
                success: function (result) {
                    if (result.ReturnCode == '@CommonData.DbReturnCode.AccessDenied') {
                        voca.HasMarked = "0";
                        window.location.href = '/Account/RequireLogin';
                    }
                    else if (result.ReturnCode != 0) {
                        voca.HasMarked = "0";
                        alert('Có lỗi xảy ra');
                    }
                    else {
                        alert('Đã thêm vào Sổ tay của bạn');
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.responseText);
                    return false;
                }
            });
            }
        }
        function set(value) {
            return value;
        }
</script>
